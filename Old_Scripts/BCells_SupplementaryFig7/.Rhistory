install.packages('devtools')
devtools::install_github(repo = 'bimberlab/cellhashR', ref = 'master', dependencies = TRUE, upgrade = 'always')
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("EnsDb.Hsapiens.v86")
BiocManager::install(c("GenomicFeatures", "AnnotationDbi"))
''
install.packages("RSQLite")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("biomaRt")
devtools::install_github("rstats-db/RSQLite")
install.packages("remotes")
install.packages("remotes")
library(remotes)
install_github('cole-trapnell-lab/leidenbase')
devtools::install_github("rstats-db/RSQLite")
Sys.getenv("GITHUB_PAT")
Sys.unsetenv("GITHUB_PAT")
devtools::install_github("rstats-db/RSQLite")
devtools::install_github("rstats-db/RSQLite")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("biomaRt")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("EnsDb.Hsapiens.v75")
cp -r /projects/banchereau-lab/scRNAseq/RawData/2018/JB18033/ .
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("EnsDb.Hsapiens.v86")
install.packages("tidyverse")
devtools::install_github(repo = 'bimberlab/cellhashR', ref = 'master', dependencies = TRUE, upgrade = 'always')
library(Seurat)
library(patchwork)
library(Matrix)
library(cellhashR)
library(Signac)
library(EnsDb.Hsapiens.v86)
library(dplyr)
library(ggplot2)
install.packages("Seurat")
install.packages("ggrepel")
remotes::install_github("slowkow/ggrepel")
install.packages('deldir')
install.packages('Seurat')
install.packages('Seurat')
install.packages("spatstat.geom")
install.packages("spatstat.geom")
install.packages('Seurat')
library(cinaR)
library(TCseq)
library(pheatmap)
library(ggplot2)
library(tidyr)
library(dplyr)
library(cinaRgenesets)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(TxDb.Hsapiens.UCSC.hg38.knownGene)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("TxDb.Hsapiens.UCSC.hg38.knownGene")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("TxDb.Hsapiens.UCSC.hg19.knownGene")
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(TxDb.Hsapiens.UCSC.hg38.knownGene)
library(RColorBrewer)
library(reshape2)
library(ggforce)
library(plyr)
library(paletteer)
library(tidyverse)
library(readxl)
library(ggpubr)
install.packages('ggpubr')
install.packages("SparseM")
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
install.packages('cinaR')
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("TxDb.Mmusculus.UCSC.mm10.knownGene")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ChIPseeker")
install.packages("cinaR")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("sva")
Metadata <- read.csv("~/Desktop/Flu/NewBaseline/FinalMetaData.txt", sep = '\t')
colnames(Metadata)
colnames(Metadata)
Metadata <- Metadata[Metadata$nFeature_RNA > 200,]
table(Metadata$Name)
table(Metadata$orig.ident)
Metadata <- Metadata[Metadata$nFeature_RNA < 5000,]
table(Metadata$Name)
table(Metadata$orig.ident)
Metadata <- Metadata[Metadata$percent.mt < 20,]
table(Metadata$Name)
table(Metadata$orig.ident)
Metadata <- Metadata[Metadata$Scrublet == 'False',]
table(Metadata$Name)
table(Metadata$orig.ident)
library(Seurat)
M <- read.csv("~/Desktop/Flu/NewBaseline/FinalMetaData.txt")
M <- read.csv("~/Desktop/Flu/NewBaseline/FinalMetaData.txt", sep = '\t')
table(M$Name)
M <- read.csv("~/Desktop/Flu/NewBaseline/FinalBaseline.txt", sep = '\t')
M <- read.csv("~/Desktop/Flu/NewBaseline/Metadata_Annotated.txt", sep = '\t')
table(M$Name)
Markers <- c("CD3E","CD3D","CD4","CD8A","CD8B","NKG7","LYZ","CD14","IL1B","FCGR3A","FCER1G","MS4A1","CD79A")
Markers <- c("CD3E","CD3D","CD4","CD8A","CD8B","IL7R","NKG7","LYZ","CD14","IL1B","FCGR3A","FCER1G","ISG15","MS4A1","CD79A")
# read in the differential motifs dataframe from Signac Vignette
chromVAR.signature.motifs <- read.csv("~/Desktop/Mice_BC/Subclustering_DM/ATAC/DiffPeaks_Type/Chromvar/TotalMotifs.txt", sep = '\t', header = F)
View(chromVAR.signature.motifs)
# read in the differential motifs dataframe from Signac Vignette
chromVAR.signature.motifs <- read.csv("~/Desktop/Mice_BC/Subclustering_DM/ATAC/DiffPeaks_Type/Chromvar/TotalMotifs.txt", sep = '\t', header = F)
colnames(chromVAR.signature.motifs) <- c("ID", "p_val", "log_FC_Change", "pct.1", "pct.2", "adj_p_val", "CellType")
chromVAR.signature.motifs$CellType <- gsub(".txt","",chromVAR.signature.motifs$CellType)
chromVAR.signature.motifs$log_FC_Change <- as.numeric(chromVAR.signature.motifs$log_FC_Change)
chromVAR.signature.motifs <- chromVAR.signature.motifs[(chromVAR.signature.motifs$log_FC_Change > 0),]
View(chromVAR.signature.motifs)
View(chromVAR.signature.motifs)
library(tidyverse)
library(JASPAR2020)
library(TFBSTools)
library(universalmotif)
library(dendextend)
library(grid)
library(gridExtra)
library(ggside)
library(patchwork)
chromVAR.signature.motifs <- read.csv("~/Downloads/everything3.csv", sep = '\t', header = T)
View(chromVAR.signature.motifs)
chromVAR.signature.motifs <- read.csv("~/Downloads/everything3.csv", sep = ',', header = T)
View(chromVAR.signature.motifs)
colnames(chromVAR.signature.motifs) <- c("ID", "p_val", "log_FC_Change", "pct.1", "pct.2", "adj_p_val", "CellType")
View(chromVAR.signature.motifs)
chromVAR.signature.motifs <- read.csv("~/Downloads/everything3.csv", sep = ',', header = T)
View(chromVAR.signature.motifs)
View(chromVAR.signature.motifs)
# read in the differential motifs dataframe from Signac Vignette
chromVAR.signature.motifs <- read.csv("~/Desktop/Mice_BC/Subclustering_TCells/ATAC/DiffPeaks_Type/Chromvar/FinalMotifs1.txt", sep = '\t', header = T)
View(chromVAR.signature.motifs)
CD14_DAResults_EdgeR_Unfiltered_ <- readRDS("~/DiffBind/NewData_HG38/CD14_CD34_DAResults_EdgeR_Unfiltered_Age/CD14_DAResults_EdgeR_Unfiltered_.rds")
View(CD14_DAResults_EdgeR_Unfiltered_)
CD14_DAResults_EdgeR_Unfiltered_[["cp"]]
A <- CD14_DAResults_EdgeR_Unfiltered_[["cp"]]
View(A)
CD14_DifferentialResults <- readRDS("~/DiffBind/NewData_HG38/FinalAnalysis_July28/CD14_DifferentialResults.rds")
View(CD14_DifferentialResults)
View(CD14_DifferentialResults[["DA.peaks"]][["Healthy_nonCov"]])
View(CD14_DifferentialResults[["DA.peaks"]][["Healthy_Severe"]])
View(CD14_DifferentialResults[["DA.peaks"]][["Healthy_Severe_Followup"]])
col2rgb
col2rgb()
col2rgb("orangered1")
##FIGURE 1A - RNA UMAP
colr <- c("orangered1","dodgerblue3","purple","firebrick4","goldenrod2","lightblue2","darkblue")
col2rgb(colr)
install.packages("pals")
install.packages('tidyverse')
install.packages('dplyr')
install.packages('ggplot2')
install.packages('shiny')
install.packages('pals')
install.packages('gridExtra')
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.15")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.15")
setRepositories(ind=1:3) # needed to automatically install Bioconductor dependencies
install.packages("Signac")
install.packages("Seurat")
library(Seurat)
install.packages("harmony")
BiocManager::install("sva")
BiocManager::install("DiffBind")
install.packages("cinaR")
install.packages("pheatmap")
install.packages("paletteer")
install.packages("readxl")
install.packages("cinaRgenesets")
BiocManager::install("BSgenome.Hsapiens.UCSC.hg19")
BiocManager::install("BSgenome.Hsapiens.UCSC.hg38")
BiocManager::install("BSgenome.Hsapiens.UCSC.mm10")
BiocManager::install("TFBSTools")
BiocManager::install("JASPAR2022")
BiocManager::install("JASPAR2020")
BiocManager::install("TCseq")
install.packages('ggpubr')
install.packages('ggforce')
BiocManager::install("annotables")
BiocManager::install("annotate")
BiocManager::install("GenomeInfoDb")
BiocManager::install("IRanges")
BiocManager::install("SummarizedExperiment")
BiocManager::install("AnnotationDbi")
BiocManager::install("rtracklayer")
BiocManager::install("DEseq2")
BiocManager::install("DESeq2")
BiocManager::install("clusterProfiler")
BiocManager::install("fgsea")
BiocManager::install("SingleCellExperiment")
BiocManager::install("BSgenome")
BiocManager::install("ensembldb")
BiocManager::install("EnhancedVolcano")
BiocManager::install("ComplexHeatmap")
BiocManager::install("monocle3")
BiocManager::install("monocle")
BiocManager::install("motifmatchr")
library(chromVAR)
BiocManager::install("chromVAR")
BiocManager::install("Nebulosa")
BiocManager::install("memes")
install.packages("devtools")
devtools::install_github("prabhakarlab/DUBStepR")
devtools::install_github("GreenleafLab/ArchR", ref="master", repos = BiocManager::repositories())
Sys.getenv("GITHUB_PAT")
Sys.unsetenv("GITHUB_PAT")
devtools::install_github("GreenleafLab/ArchR", ref="master", repos = BiocManager::repositories())
install.packages("devtools")
devtools::install_github("prabhakarlab/DUBStepR")
BCells_RNA <- readRDS("~/Desktop/Mice_BC/Subclustering_BCells/BCells_RNA.rds")
BCells_RNA <- readRDS("~/Desktop/Mice_BC/FinalFigurePanels/BCells_RNA.rds")
View(BCells_RNA)
shiny::runApp('JacksonLabs_Mice/Mice_Aging_RShiny')
setwd("~/Mammary_gland_aging/TCells_SupplementaryFig6")
##FIGURE 1F
A <- read_xlsx("~/Desktop/Mice_BC/Subclustering_TCells/Counts2.xlsx")
library(readxl)
##FIGURE 1F
A <- read_xlsx("~/Desktop/Mice_BC/Subclustering_TCells/Counts2.xlsx")
View(A)
setwd("~/Mammary_gland_aging/TCells_SupplementaryFig6")
##FIGURE 1F
library(readxl)
library(ggplot2)
Counts <- read_xlsx("./SupplementaryFigure_6e.xlsx")
View(Counts)
Closing <- Counts[,c(1,2)]
Opening <- Counts[,c(1,3)]
colnames(Opening) <- c("CellType","Counts")
colnames(Closing) <- c("CellType","Counts")
Opening$Direction <- "Upregulated"
Closing$Direction <- "Downregulated"
Closing$Counts <- as.numeric(Closing$Counts) * -1
FinalCounts <- rbind(Opening, Closing)
long_DF <- FinalCounts %>% gather("Type", "Count", Counts)
library(dplyr)
Closing <- Counts[,c(1,2)]
Opening <- Counts[,c(1,3)]
colnames(Opening) <- c("CellType","Counts")
colnames(Closing) <- c("CellType","Counts")
Opening$Direction <- "Upregulated"
Closing$Direction <- "Downregulated"
Closing$Counts <- as.numeric(Closing$Counts) * -1
FinalCounts <- rbind(Opening, Closing)
long_DF <- FinalCounts %>% gather("Type", "Count", Counts)
long_DF$CellType <- factor(long_DF$CellType, levels=c("Naive CD4-1", "Naive CD4-2","Memory CD4","Naive CD8-1","Naive CD8-2","CD8 GZMK","CD8 GZMM","CD8 ISG15","γδ T","NK"))
long_DF$Count <- as.numeric(long_DF$Count)
##FIGURE 1F
library(readxl)
library(ggplot2)
library(dplyr)
library(tidyverse)
##FIGURE 1F
library(readxl)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(tidyr)
Counts <- read_xlsx("./SupplementaryFigure_6e.xlsx")
Closing <- Counts[,c(1,2)]
Opening <- Counts[,c(1,3)]
colnames(Opening) <- c("CellType","Counts")
colnames(Closing) <- c("CellType","Counts")
Opening$Direction <- "Upregulated"
Closing$Direction <- "Downregulated"
Closing$Counts <- as.numeric(Closing$Counts) * -1
FinalCounts <- rbind(Opening, Closing)
long_DF <- FinalCounts %>% gather("Type", "Count", Counts)
long_DF$CellType <- factor(long_DF$CellType, levels=c("Naive CD4-1", "Naive CD4-2","Memory CD4","Naive CD8-1","Naive CD8-2","CD8 GZMK","CD8 GZMM","CD8 ISG15","γδ T","NK"))
long_DF$Count <- as.numeric(long_DF$Count)
pdf("./SFig_6e.pdf", height = 10, width = 14)
ggplot(long_DF[order(long_DF$Type, decreasing = F),], aes(y=Count, x=CellType, fill = Direction)) +
geom_bar(stat="identity") +
scale_fill_manual(values = c("lightgrey","black")) +
xlab("Gene Counts") +
theme(axis.text =element_text(size=16),axis.title=element_text(size=16,face="bold")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
ylab("Cell Types")+
guides(fill=guide_legend(title="Direction"))
dev.off()
warnings()
##FIGURE 1F
library(readxl)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(tidyr)
Counts <- read_xlsx("./SupplementaryFigure_6e.xlsx")
Closing <- Counts[,c(1,2)]
Opening <- Counts[,c(1,3)]
colnames(Opening) <- c("CellType","Counts")
colnames(Closing) <- c("CellType","Counts")
Opening$Direction <- "Upregulated"
Closing$Direction <- "Downregulated"
Closing$Counts <- as.numeric(Closing$Counts) * -1
FinalCounts <- rbind(Opening, Closing)
long_DF <- FinalCounts %>% gather("Type", "Count", Counts)
long_DF$CellType <- factor(long_DF$CellType, levels=c("Naive CD4-1", "Naive CD4-2","Memory CD4","Naive CD8-1","Naive CD8-2","CD8 GZMK","CD8 GZMM","CD8 ISG15","γδ T","NK"))
long_DF$Count <- as.numeric(long_DF$Count)
## The γδ T label in the figure sometime does not show up (prints as .. T). We had to manually edit it in final figures. If that happens, please do the same
pdf("./SFig_6e.pdf", height = 10, width = 14)
ggplot(long_DF[order(long_DF$Type, decreasing = F),], aes(y=Count, x=CellType, fill = Direction)) +
geom_bar(stat="identity") +
scale_fill_manual(values = c("lightgrey","black")) +
xlab("Gene Counts") +
theme(axis.text =element_text(size=16),axis.title=element_text(size=16,face="bold")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
ylab("Cell Types")+
guides(fill=guide_legend(title="Direction"))
dev.off()
pdf("./SFig_6e.pdf", height = 10, width = 14)
ggplot(long_DF[order(long_DF$Type, decreasing = F),], aes(y=Count, x=CellType, fill = Direction)) +
geom_bar(stat="identity") +
scale_fill_manual(values = c("blue","red")) +
xlab("Gene Counts") +
theme(axis.text =element_text(size=16),axis.title=element_text(size=16,face="bold")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
ylab("Cell Types")+
guides(fill=guide_legend(title="Direction"))
dev.off()
library(VennDiagram)
setwd("~/Desktop/Mice_BC/Subclustering_TCells/ATAC/DiffPeaks/FinalPeaks/Annotations/Filtered/")
GZMK <- read.csv("./FinalAnnotated_CD8_GZMK.txt", sep = '\t')
GZMM <- read.csv("./FinalAnnotated_CD8_GZMM.txt", sep = '\t')
CD44 <- read.csv("./FinalAnnotated_MemoryCD4_CD44.txt", sep = '\t')
GZMK <- as.data.frame(paste(GZMK$seqnames,GZMK$start,GZMK$end,sep = '_'))
GZMM <- as.data.frame(paste(GZMM$seqnames,GZMM$start,GZMM$end,sep = '_'))
CD44 <- as.data.frame(paste(CD44$seqnames,CD44$start,CD44$end,sep = '_'))
colnames(GZMK) <- "gene"
colnames(GZMM) <- "gene"
colnames(CD44) <- "gene"
myCol <- c("purple", "dodgerblue3","firebrick4")
p1 <- venn.diagram(
x = list(GZMK$gene, GZMM$gene, CD44$gene),
category.names = c("GZMK" , "GZMM" , "CD44"),
filename = NULL,
output=TRUE,
# Output features
imagetype="pdf" ,
height = 300 ,
width = 300 ,
resolution = 300,
compression = "lzw",
# Circles
lwd = 2,
lty = 'blank',
fill = myCol,
# Numbers
cex = .6,
fontface = "bold",
fontfamily = "sans",
# Set names
cat.cex = 0.6,
cat.fontface = "bold",
cat.default.pos = "outer",
cat.pos = c(-27, 27, 135),
cat.dist = c(0.055, 0.055, 0.085),
cat.fontfamily = "sans",
rotation = 1
)
grid.draw(p1)
View(CD44)
GZMK <- read.csv("./FinalAnnotated_CD8_GZMK.txt", sep = '\t')
GZMK <- as.data.frame(paste(GZMK$seqnames,GZMK$start,GZMK$end,sep = '_'))
GZMK <- read.csv("./FinalAnnotated_CD8_GZMK.txt", sep = '\t')
View(GZMK)
setwd("~/Mammary_gland_aging/TCells_SupplementaryFig6")
setwd("~/Desktop/Mice_BC/Subclustering_TCells/Pseudobulk/Combined/")
library(VennDiagram)
setwd("~/Desktop/Mice_BC/Subclustering_TCells/Pseudobulk/Combined/")
GZMK <- read.csv("./CD8_GZMK.txt", sep = '\t')
GZMM <- read.csv("./CD8_GZMM.txt", sep = '\t')
CD44 <- read.csv("./MemoryCD4_CD44.txt", sep = '\t')
View(CD44)
GZMK <- as.data.frame(GZMK$gene)
GZMM <- as.data.frame(GZMM$gene)
CD44 <- as.data.frame(CD44$gene)
colnames(GZMK) <- "gene"
colnames(GZMM) <- "gene"
colnames(CD44) <- "gene"
myCol <- c("purple", "dodgerblue3","firebrick4")
p1 <- venn.diagram(
x = list(GZMK$gene, GZMM$gene, CD44$gene),
category.names = c("GZMK" , "GZMM" , "CD44"),
filename = NULL,
output=TRUE,
# Output features
imagetype="pdf" ,
height = 300 ,
width = 300 ,
resolution = 300,
compression = "lzw",
# Circles
lwd = 2,
lty = 'blank',
fill = myCol,
# Numbers
cex = .6,
fontface = "bold",
fontfamily = "sans",
# Set names
cat.cex = 0.6,
cat.fontface = "bold",
cat.default.pos = "outer",
cat.pos = c(-27, 27, 135),
cat.dist = c(0.055, 0.055, 0.085),
cat.fontfamily = "sans",
rotation = 1
)
grid.draw(p1)
library(VennDiagram)
setwd("~/Desktop/Mice_BC/Subclustering_TCells/Pseudobulk/Combined/")
GZMK <- read.csv("./CD8_GZMK.txt", sep = '\t')
GZMM <- read.csv("./CD8_GZMM.txt", sep = '\t')
CD44 <- read.csv("./MemoryCD4_CD44.txt", sep = '\t')
GZMK <- as.data.frame(paste(GZMK$seqnames,GZMK$start,GZMK$end,sep = '_'))
GZMM <- as.data.frame(paste(GZMM$seqnames,GZMM$start,GZMM$end,sep = '_'))
CD44 <- as.data.frame(paste(CD44$seqnames,CD44$start,CD44$end,sep = '_'))
colnames(GZMK) <- "gene"
colnames(GZMM) <- "gene"
colnames(CD44) <- "gene"
myCol <- c("purple", "dodgerblue3","firebrick4")
p1 <- venn.diagram(
x = list(GZMK$gene, GZMM$gene, CD44$gene),
category.names = c("GZMK" , "GZMM" , "CD44"),
filename = NULL,
output=TRUE,
# Output features
imagetype="pdf" ,
height = 300 ,
width = 300 ,
resolution = 300,
compression = "lzw",
# Circles
lwd = 2,
lty = 'blank',
fill = myCol,
# Numbers
cex = .6,
fontface = "bold",
fontfamily = "sans",
# Set names
cat.cex = 0.6,
cat.fontface = "bold",
cat.default.pos = "outer",
cat.pos = c(-27, 27, 135),
cat.dist = c(0.055, 0.055, 0.085),
cat.fontfamily = "sans",
rotation = 1
)
grid.draw(p1)
grid.draw(p1)
setwd("~/Desktop/Mice_BC/Subclustering_TCells/Pseudobulk/Combined/")
GZMK <- read.csv("./CD8_GZMK.txt", sep = '\t')
GZMM <- read.csv("./CD8_GZMM.txt", sep = '\t')
CD44 <- read.csv("./MemoryCD4_CD44.txt", sep = '\t')
GZMK <- as.data.frame(GZMK$gene)
GZMM <- as.data.frame(GZMM$gene)
CD44 <- as.data.frame(CD44$gene)
colnames(GZMK) <- "gene"
colnames(GZMM) <- "gene"
colnames(CD44) <- "gene"
myCol <- c("purple", "dodgerblue3","firebrick4")
p1 <- venn.diagram(
x = list(GZMK$gene, GZMM$gene, CD44$gene),
category.names = c("GZMK" , "GZMM" , "CD44"),
filename = NULL,
output=TRUE,
# Output features
imagetype="pdf" ,
height = 300 ,
width = 300 ,
resolution = 300,
compression = "lzw",
# Circles
lwd = 2,
lty = 'blank',
fill = myCol,
# Numbers
cex = .6,
fontface = "bold",
fontfamily = "sans",
# Set names
cat.cex = 0.6,
cat.fontface = "bold",
cat.default.pos = "outer",
cat.pos = c(-27, 27, 135),
cat.dist = c(0.055, 0.055, 0.085),
cat.fontfamily = "sans",
rotation = 1
)
grid.draw(p1)
setwd("~/Mammary_gland_aging/DendriticCells_Macrophages_Fig5_SupplementaryFig7")
setwd("~/Mammary_gland_aging/BCells_SupplementaryFig7")
BCells_RNA <- readRDS("~/Desktop/Mice_BC/FinalFigurePanels/BCells_RNA.rds")
