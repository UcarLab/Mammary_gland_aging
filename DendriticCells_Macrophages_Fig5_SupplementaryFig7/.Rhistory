for (i in MarkerGenes) {
print(names(MarkerGenes[i]))
print(i)
}
for (i in MarkerGenes) {
print(names(MarkerGenes)[i])
print(i)
}
for (i in MarkerGenes) {
print(names(i))
print(i)
}
MarkerGenes[1]
MarkerGenes[44]
length(MarkerGenes)
for (i in 1:length(MarkerGenes)) {
print(names(MarkerGenes)[i])
print(MarkerGenes[i])
}
for (i in 1:length(MarkerGenes)) {
Filename <- print(names(MarkerGenes)[i])
Genes <- print(MarkerGenes[i])
print(Filename)
print(Genes)
}
MarkerGenes <- list("MgK"=c("PPBP","PF4"),
"Mono"=c("S100A8", "CD14","LYZ","FCGR3A"),
"DCs"=c("CD1C","CST3","FCER1G"),
"Tcells"=c("IL7R","CD3E","CD3D","CD8A","CD8B"),
"Cytotoxic"=c("GZMA","GZMB","GZMH","GZMK"),
"NK"=c("NKG7","XCL1"),
"Bcells"=c("MS4A1", "BANK1","CD79A"),
"PCs"=c("MZB1","TNFRSF17","LILRA4"),
"pDCs"=c("IRF7","TCF4"),
"ISGs"=c("IFI44L","ISG15","IFI6","IFI27","IFI44"),
"Eryt"=c("HBB","HBA1"),
"Inflammation"=c("IL1B","NLRP3"),
"LineageMarkers_CD8"=c("IL7R","CD3E","CD3D","CD8A","CD8B"),
"Naive_CD8"=c("LEF1","CCR7","TCF7","SELL","CD28","CD27"),
"TEMRAs_Cytotoxic_CD8"=c("NKG7","GNLY","FCGR3A","FCRL6", "KLRD1","KLRG1","TYROBP","GZMA","GZMB","IFNG","GZMH","GZMM"),
"Senescence_CD8"=c("CDKN1A","CDKN2A","SESN2","PRKAA1","MAPKAPK2","MAPK1","MAPK14"),
"MAIT_CD8"=c("KLRB1","ZBTB16","CCR6","CXCR6","GZMK"), #"RORC","B3GAT1",,"TRAV1-2"
"TCR_CD8"=c("TRAC","TRBC2","TRDC","TRGC1"),
"Cycling_CD8"=c("MKI67","CX3CR1","HMGB2"),
"ISGs_CD8"=c("ISG15","XAF1","MX1"),
'LineageMarkers_CD4'=c('IL7R','CD3E','CD3D','CD4'),
'Naive_CD4'=c('CCR7','TCF7','SELL', 'LEF1'),
'Anergy_CD4'=c('LGALS3', 'PDCD1'),
'Th1_CD4'=c('STAT4', 'TBX21', 'CCR5', 'CXCR3','IFNG'), #,'TREML','TNFRSF16'
'Th2_CD4'=c( 'GATA3', 'CCR4', 'IL5'),
'Th17_CD4'=c('IL17RE',  'KLRB1', 'RORC'),
'Treg_CD4'=c('FOXP3', 'IL2RA','CTLA4','TIGIT'), #,'CXCR3'
'EM_CD4'=c( 'S100A4','CCL5','PRDM1'),
'CK_CD4'=c( 'IL2','IL21'), #'IFNA4',
'CTL_CD4'=c( 'NKG7', 'GZMB', 'GZMA', 'PRF1', 'KLRG1', 'GNLY', 'FGFBP2'),
'ISGs_CD4'=c('ISG15','XAF1','MX1'),
'Others_CD4'=c('CXCR5','CD28'),
'MonocyteMarkers'=c("FCGR3A","CST3","FCER1G","CD14","LYZ",'S100A8','S100A9'),
'ISG_Monocyte'=c('IFI44L','ISG15','IFI6','XAF1','MX1'),
'Chem_Monocyte'=c('CCL5','CCL4'),
'Inflammation_Monocyte'=c('IL1B','ITGAM','CXCL8','TNF','AHR','CD83','CCL4','CCL3','CXCL2','CXCL10','CX3CR1'),
'Nonswitched_BCells'=c('CD1A','CD48','PTPRC','CD44','B2M','FCGR2B','CD27','ICAM1','CD84'),
'Transitional_BCells'=c('CD24','MME','CD79B','CD9','CD38','CD72','CD55','BTLA','CD200'), #,'TREML','TNFRSF16'
'Switched_BCells'=c('ATP1B3','ITGB1','CD82','CD53','CD99','TNFRSF14','CD180','CR1','B2M','MRC1'),
'ABC_DN2_BCells'=c('CXCR5','CD27','CR1','ITGAX','TBX21','FGR','FCRL5','TFEC','ZEB2',
'ZBTB32','CD86','AICDA','EBI3','SIGLEC6',
'PRDM1'), #,'CXCR3'
'MBC_BCells'=c('IGHA1','IGHG1','IGHG3'),
'ISG_BCells'=c('IFI44L','ISG15','IFI6','XAF1','MX1'),
'naive_BCells'=c('CD1D','CXCR5','CCR7','FCER2','CD200'),
'PCs_BCells'=c("MZB1","TNFRSF17"))
DotplotGenes <- Reduce(merge,MarkerGenes)
View(DotplotGenes)
DotplotGenes <- unlist(MarkerGenes, recursive = FALSE)
DotplotGenes <- unique(DotplotGenes)
sed -i 's/CD4 CCR7+ JUN+/CD4_CCR7_JUN/g' MetaData_Subtypes1.txt
TCells <- readRDS("~/Desktop/Mice_BC/Subclustering_TCells/TCells.rds")
library(Seurat)
FeaturePlot(TCells, slot = "scale.data", features = "Cd79b")
VlnPlot(TCells, group.by = "NewAnnotations", features = "Cd79b")
VlnPlot(TCells, group.by = "NewAnnotations", features = "Xcl1")
VlnPlot(TCells, group.by = "NewAnnotations", features = "Jchain")
VlnPlot(TCells, group.by = "NewAnnotations", features = "Sell")
VlnPlot(TCells, group.by = "NewAnnotations", features = "Igkc")
##FIGURE 1A
#colr <- c("orangered1","deepskyblue","lightblue2","darkblue","purple","dodgerblue3", "goldenrod2", "firebrick4", "lightpink", "springgreen4")
colr <- c("springgreen4","goldenrod2","dodgerblue3","purple","lightblue2", "deepskyblue", "firebrick4","orangered1", "lightpink")
rgb(springgreen4)
rgb("springgreen4")
?rgb
col2hex()
library(gplots)
col2hex()
##FIGURE 1A
#colr <- c("orangered1","deepskyblue","lightblue2","darkblue","purple","dodgerblue3", "goldenrod2", "firebrick4", "lightpink", "springgreen4")
colr <- c("springgreen4","goldenrod2","dodgerblue3","purple","lightblue2", "deepskyblue", "firebrick4","orangered1", "lightpink")
col2hex(colr)
CESEEK_Peaks_CD14 <- readRDS("~/Desktop/Covid/Ceseek/CESEEK_Peaks_CD14.rds")
View(CESEEK_Peaks_CD14)
CESEEK_Peaks_CD14@seqnames
CESEEK_Peaks_CD14
Peaks <- as.data.frame(CESEEK_Peaks_CD14)
View(Peaks)
table(Peaks$seqnames)
Peaks <- Peaks[grep('^chr', Peaks$seqnames),]
write.table(Peaks, file = "~/Desktop/Covid/Ceseek/CD14_Macs2_Peaks.bed", sep = '\t', col.names = F, row.names = F)
library(ktplots)
devtools::install_github('zktuong/ktplots', dependencies = TRUE)
if (!requireNamespace("devtools", quietly = TRUE))
install.packages("devtools")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
devtools::install_github('zktuong/ktplots', dependencies = TRUE)
if (!requireNamespace("devtools", quietly = TRUE))
install.packages("devtools")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
devtools::install_github('zktuong/ktplots', dependencies = TRUE)
Markers <- read.csv("~/Desktop/Flu/Annotations/AllMarkers_Clusters.txt")
View(Markers)
Markers <- Markers[Markers$avg_log2FC > 0,]
Markers <- Markers[Markers$p_val_adj <= 0.05,]
Markers <- Markers[(Markers$pct.1 - Markers$pct.2 >= 0.5),]
Markers <- read.csv("~/Desktop/Flu/Annotations/AllMarkers_Clusters.txt")
Markers <- Markers[Markers$avg_log2FC > 0,]
Markers <- Markers[Markers$p_val_adj <= 0.05,]
table(Markers$cluster)
Markers <- read.csv("~/Desktop/Flu/Annotations/AllMarkers_Clusters.txt")
table(Markers$cluster)
Markers <- Markers[Markers$avg_log2FC > 0,]
Annotations <- read.csv("~/Desktop/Flu/FinalMetaData.txt", sep = '\t')
View(Annotations)
library(Seurat)
?subset()
library(Seurat)
DM_RNA <- readRDS("~/Desktop/Mice_BC/FinalFigurePanels/DM_RNA.rds")
DM_ATAC <- readRDS("~/Desktop/Mice_BC/FinalFigurePanels/DM_ATAC.rds")
TCells_RNA <- readRDS("~/Desktop/Mice_BC/FinalFigurePanels/TCells_RNA.rds")
TCells_ATAC <- readRDS("~/Desktop/Mice_BC/FinalFigurePanels/TCells_ATAC.rds")
View(TCells_RNA)
View(TCells_ATAC)
TCells_RNA
##FIGURE 1E
FeaturePlot(TCells_RNA, features = c("Ccl3"), reduction = "humap3", cols = c("lightgrey", "red3"),label = F, ncol = 1, keep.scale="all", slot = "scale.data")
library(Seurat)
##FIGURE 1E
FeaturePlot(TCells_RNA, features = c("Ccl3"), reduction = "humap3", cols = c("lightgrey", "red3"),label = F, ncol = 1, keep.scale="all", slot = "scale.data")
load("~/DiffBind/Peaks/cd14_consensusPeaks_Redo.RData")
View(DBdata)
saveRDS(pbmc, "./PooledSeurat_Final_WithGeneActivity.rds")
load("~/Covid_Scripts_Git/Bulk_Scripts/All_DE_genes_edger.Rdata")
View(DE.genes.edger)
load("~/DiffBind/Peaks/cd14_consensusPeaks_Redo.RData")
View(DBdata)
DBdata[["peaks"]]
View(DBdata[["peaks"]][[1]])
View(DBdata[["peaks"]][[1]])
DBdata
counts <- dba.peakset(DBdata, bRetrieve=T, DataType=DBA_DATA_FRAME)
library(DiffBind)
counts <- dba.peakset(DBdata, bRetrieve=T, DataType=DBA_DATA_FRAME)
View(counts)
DBAObject <- readRDS("~/Desktop/DiffbindTrial/DBAObject.rds")
View(DBAObject)
DBAObject[["peaks"]]
DBAObject
View(DBAObject[["peaks"]][[1]])
DBAObject_Overlap2 <- readRDS("~/Desktop/DiffbindTrial/DBAObject_Overlap2.rds")
DBAObject_Overlap4 <- readRDS("~/Desktop/DiffbindTrial/DBAObject_Overlap4.rds")
View(DBAObject_Overlap2)
View(DBAObject_Overlap4)
DBAObject <- readRDS("~/Desktop/DiffbindTrial/DBAObject.rds")
View(DBAObject)
DBAObject
DBAObject_Overlap2 <- readRDS("~/Desktop/DiffbindTrial/DBAObject_Overlap2.rds")
View(DBAObject_Overlap2)
DBAObject[["binding"]]
View(DBAObject)
DBAObject
DBAObject_Overlap2
View(DBAObject_Overlap2)
DBAObject_Overlap4 <- readRDS("~/Desktop/DiffbindTrial/DBAObject_Overlap4.rds")
View(DBAObject_Overlap4)
rm(DBAObject_Overlap2)
y <- matrix(rnbinom(20,size=1,mu=10),5,4)
cpm(y)
library(edgeR)
cpm(y)
c <- cpm(y) >= 1
c
c <- y[cpm(y) >= 1,]
y <- matrix(rnbinom(20,size=1,mu=10),5,4)
c <- y[cpm(y) >= 1,]
cp <- matrix(rnbinom(20,size=1,mu=10),5,4)
cp.filtered <-
cp[rowSums(edgeR::cpm(cp) >= 1) >= 2, ]
View(cp.filtered)
View(cp)
cp <- matrix(rnbinom(20,size=1,mu=10),5,4)
cp.filtered <-
+     cp[rowSums(edgeR::cpm(cp) >= 1) >= 2, ]
A <- edgeR::cpm(cp) >= 1
cp <- matrix(rexp(200, rate=.1), ncol=20)
cp.filtered <-
cp[rowSums(edgeR::cpm(cp) >= cpm.threshold) >= library.threshold, ]
cp.filtered <-
cp[rowSums(edgeR::cpm(cp) >= 1) >= 2, ]
View(cp.filtered)
rowSums(edgeR::cpm(cp) >= 1)
library(Seurat)
T <- read.csv("~/Desktop/Flu/Anno_New/AllTCellsMarkers_Annotated.txt", sep = '\t')
View(`T`)
A <- T[T$cluster == "UnAnnotated",]
View(A)
Data <- read.table("~/Downloads/myeloid_cluster_index.tsv", sep = '\t')
View(Data)
Data <- read.table("~/Downloads/myeloid_cluster_index.tsv", sep = '\t', header = T)
colnames(Data) <- c("original", "MarkerAnnotations")
Data$Cluster <- 0
table(Data$Cluster)
table(Data$MarkerAnnotations)
for (i in 1:nrow(Data)) {
if (Data$MarkerAnnotations[i] == "CD16+ Mono"){
Data$Cluster[i] = 1
}
if (Data$MarkerAnnotations[i] == "DC"){
Data$Cluster[i] = 2
}
if (Data$MarkerAnnotations[i] == "EC enriched"){
Data$Cluster[i] = 3
}
if (Data$MarkerAnnotations[i] == "EC enriched"){
Data$Cluster[i] = 4
}
}
table(Data$MarkerAnnotations)
table(Data$Cluster)
for (i in 1:nrow(Data)) {
if (Data$MarkerAnnotations[i] == "CD16+ Mono"){
Data$Cluster[i] = 1
}
if (Data$MarkerAnnotations[i] == "DC"){
Data$Cluster[i] = 2
}
if (Data$MarkerAnnotations[i] == "EC enriched"){
Data$Cluster[i] = 3
}
if (Data$MarkerAnnotations[i] == "LC enriched"){
Data$Cluster[i] = 4
}
}
table(Data$Cluster)
table(Data$MarkerAnnotations)
write.table(Data, file = "~/Downloads/myeloid_cluster_index.tsv", sep = '\t')
table(Data$Cluster)
library(devtools)
install_github('andreacirilloac/updateR')
library(updateR)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.15")
library(Seurat)
library(patchwork)
library(Matrix)
library(cellhashR)
library(Signac)
library(EnsDb.Hsapiens.v86)
library(dplyr)
library(ggplot2)
install.packages("Signac")
install.packages('Seurat')
devtools::install_github(repo = 'bimberlab/cellhashR', ref = 'master', dependencies = TRUE, upgrade = 'always')
local({options(repos = BiocManager::repositories())})
devtools::install_github(repo = 'bimberlab/cellhashR', ref = 'master', dependencies = TRUE, upgrade = 'always')
library(devtools)
devtools::install_github("hadley/devtools")
install.packages('devtools')
install.packages("usethis")
install.packages("gert")
install.packages("gert")
install.packages("usethis")
install.packages('devtools')
devtools::install_github(repo = 'bimberlab/cellhashR', ref = 'master', dependencies = TRUE, upgrade = 'always')
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("EnsDb.Hsapiens.v86")
BiocManager::install(c("GenomicFeatures", "AnnotationDbi"))
''
install.packages("RSQLite")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("biomaRt")
devtools::install_github("rstats-db/RSQLite")
install.packages("remotes")
install.packages("remotes")
library(remotes)
install_github('cole-trapnell-lab/leidenbase')
devtools::install_github("rstats-db/RSQLite")
Sys.getenv("GITHUB_PAT")
Sys.unsetenv("GITHUB_PAT")
devtools::install_github("rstats-db/RSQLite")
devtools::install_github("rstats-db/RSQLite")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("biomaRt")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("EnsDb.Hsapiens.v75")
cp -r /projects/banchereau-lab/scRNAseq/RawData/2018/JB18033/ .
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("EnsDb.Hsapiens.v86")
install.packages("tidyverse")
devtools::install_github(repo = 'bimberlab/cellhashR', ref = 'master', dependencies = TRUE, upgrade = 'always')
library(Seurat)
library(patchwork)
library(Matrix)
library(cellhashR)
library(Signac)
library(EnsDb.Hsapiens.v86)
library(dplyr)
library(ggplot2)
install.packages("Seurat")
install.packages("ggrepel")
remotes::install_github("slowkow/ggrepel")
install.packages('deldir')
install.packages('Seurat')
install.packages('Seurat')
install.packages("spatstat.geom")
install.packages("spatstat.geom")
install.packages('Seurat')
library(cinaR)
library(TCseq)
library(pheatmap)
library(ggplot2)
library(tidyr)
library(dplyr)
library(cinaRgenesets)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(TxDb.Hsapiens.UCSC.hg38.knownGene)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("TxDb.Hsapiens.UCSC.hg38.knownGene")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("TxDb.Hsapiens.UCSC.hg19.knownGene")
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(TxDb.Hsapiens.UCSC.hg38.knownGene)
library(RColorBrewer)
library(reshape2)
library(ggforce)
library(plyr)
library(paletteer)
library(tidyverse)
library(readxl)
library(ggpubr)
install.packages('ggpubr')
install.packages("SparseM")
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
install.packages('cinaR')
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("TxDb.Mmusculus.UCSC.mm10.knownGene")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ChIPseeker")
install.packages("cinaR")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("sva")
Metadata <- read.csv("~/Desktop/Flu/NewBaseline/FinalMetaData.txt", sep = '\t')
colnames(Metadata)
colnames(Metadata)
Metadata <- Metadata[Metadata$nFeature_RNA > 200,]
table(Metadata$Name)
table(Metadata$orig.ident)
Metadata <- Metadata[Metadata$nFeature_RNA < 5000,]
table(Metadata$Name)
table(Metadata$orig.ident)
Metadata <- Metadata[Metadata$percent.mt < 20,]
table(Metadata$Name)
table(Metadata$orig.ident)
Metadata <- Metadata[Metadata$Scrublet == 'False',]
table(Metadata$Name)
table(Metadata$orig.ident)
library(Seurat)
M <- read.csv("~/Desktop/Flu/NewBaseline/FinalMetaData.txt")
M <- read.csv("~/Desktop/Flu/NewBaseline/FinalMetaData.txt", sep = '\t')
table(M$Name)
M <- read.csv("~/Desktop/Flu/NewBaseline/FinalBaseline.txt", sep = '\t')
M <- read.csv("~/Desktop/Flu/NewBaseline/Metadata_Annotated.txt", sep = '\t')
table(M$Name)
Markers <- c("CD3E","CD3D","CD4","CD8A","CD8B","NKG7","LYZ","CD14","IL1B","FCGR3A","FCER1G","MS4A1","CD79A")
Markers <- c("CD3E","CD3D","CD4","CD8A","CD8B","IL7R","NKG7","LYZ","CD14","IL1B","FCGR3A","FCER1G","ISG15","MS4A1","CD79A")
# read in the differential motifs dataframe from Signac Vignette
chromVAR.signature.motifs <- read.csv("~/Desktop/Mice_BC/Subclustering_DM/ATAC/DiffPeaks_Type/Chromvar/TotalMotifs.txt", sep = '\t', header = F)
View(chromVAR.signature.motifs)
# read in the differential motifs dataframe from Signac Vignette
chromVAR.signature.motifs <- read.csv("~/Desktop/Mice_BC/Subclustering_DM/ATAC/DiffPeaks_Type/Chromvar/TotalMotifs.txt", sep = '\t', header = F)
colnames(chromVAR.signature.motifs) <- c("ID", "p_val", "log_FC_Change", "pct.1", "pct.2", "adj_p_val", "CellType")
chromVAR.signature.motifs$CellType <- gsub(".txt","",chromVAR.signature.motifs$CellType)
chromVAR.signature.motifs$log_FC_Change <- as.numeric(chromVAR.signature.motifs$log_FC_Change)
chromVAR.signature.motifs <- chromVAR.signature.motifs[(chromVAR.signature.motifs$log_FC_Change > 0),]
View(chromVAR.signature.motifs)
View(chromVAR.signature.motifs)
library(tidyverse)
library(JASPAR2020)
library(TFBSTools)
library(universalmotif)
library(dendextend)
library(grid)
library(gridExtra)
library(ggside)
library(patchwork)
chromVAR.signature.motifs <- read.csv("~/Downloads/everything3.csv", sep = '\t', header = T)
View(chromVAR.signature.motifs)
chromVAR.signature.motifs <- read.csv("~/Downloads/everything3.csv", sep = ',', header = T)
View(chromVAR.signature.motifs)
colnames(chromVAR.signature.motifs) <- c("ID", "p_val", "log_FC_Change", "pct.1", "pct.2", "adj_p_val", "CellType")
View(chromVAR.signature.motifs)
chromVAR.signature.motifs <- read.csv("~/Downloads/everything3.csv", sep = ',', header = T)
View(chromVAR.signature.motifs)
View(chromVAR.signature.motifs)
# read in the differential motifs dataframe from Signac Vignette
chromVAR.signature.motifs <- read.csv("~/Desktop/Mice_BC/Subclustering_TCells/ATAC/DiffPeaks_Type/Chromvar/FinalMotifs1.txt", sep = '\t', header = T)
View(chromVAR.signature.motifs)
CD14_DAResults_EdgeR_Unfiltered_ <- readRDS("~/DiffBind/NewData_HG38/CD14_CD34_DAResults_EdgeR_Unfiltered_Age/CD14_DAResults_EdgeR_Unfiltered_.rds")
View(CD14_DAResults_EdgeR_Unfiltered_)
CD14_DAResults_EdgeR_Unfiltered_[["cp"]]
A <- CD14_DAResults_EdgeR_Unfiltered_[["cp"]]
View(A)
CD14_DifferentialResults <- readRDS("~/DiffBind/NewData_HG38/FinalAnalysis_July28/CD14_DifferentialResults.rds")
View(CD14_DifferentialResults)
View(CD14_DifferentialResults[["DA.peaks"]][["Healthy_nonCov"]])
View(CD14_DifferentialResults[["DA.peaks"]][["Healthy_Severe"]])
View(CD14_DifferentialResults[["DA.peaks"]][["Healthy_Severe_Followup"]])
col2rgb
col2rgb()
col2rgb("orangered1")
##FIGURE 1A - RNA UMAP
colr <- c("orangered1","dodgerblue3","purple","firebrick4","goldenrod2","lightblue2","darkblue")
col2rgb(colr)
install.packages("pals")
install.packages('tidyverse')
install.packages('dplyr')
install.packages('ggplot2')
install.packages('shiny')
install.packages('pals')
install.packages('gridExtra')
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.15")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.15")
setRepositories(ind=1:3) # needed to automatically install Bioconductor dependencies
install.packages("Signac")
install.packages("Seurat")
library(Seurat)
install.packages("harmony")
BiocManager::install("sva")
BiocManager::install("DiffBind")
install.packages("cinaR")
install.packages("pheatmap")
install.packages("paletteer")
install.packages("readxl")
install.packages("cinaRgenesets")
BiocManager::install("BSgenome.Hsapiens.UCSC.hg19")
BiocManager::install("BSgenome.Hsapiens.UCSC.hg38")
BiocManager::install("BSgenome.Hsapiens.UCSC.mm10")
BiocManager::install("TFBSTools")
BiocManager::install("JASPAR2022")
BiocManager::install("JASPAR2020")
BiocManager::install("TCseq")
install.packages('ggpubr')
install.packages('ggforce')
BiocManager::install("annotables")
BiocManager::install("annotate")
BiocManager::install("GenomeInfoDb")
BiocManager::install("IRanges")
BiocManager::install("SummarizedExperiment")
BiocManager::install("AnnotationDbi")
BiocManager::install("rtracklayer")
BiocManager::install("DEseq2")
BiocManager::install("DESeq2")
BiocManager::install("clusterProfiler")
BiocManager::install("fgsea")
BiocManager::install("SingleCellExperiment")
BiocManager::install("BSgenome")
BiocManager::install("ensembldb")
BiocManager::install("EnhancedVolcano")
BiocManager::install("ComplexHeatmap")
BiocManager::install("monocle3")
BiocManager::install("monocle")
BiocManager::install("motifmatchr")
library(chromVAR)
BiocManager::install("chromVAR")
BiocManager::install("Nebulosa")
BiocManager::install("memes")
install.packages("devtools")
devtools::install_github("prabhakarlab/DUBStepR")
devtools::install_github("GreenleafLab/ArchR", ref="master", repos = BiocManager::repositories())
Sys.getenv("GITHUB_PAT")
Sys.unsetenv("GITHUB_PAT")
devtools::install_github("GreenleafLab/ArchR", ref="master", repos = BiocManager::repositories())
install.packages("devtools")
devtools::install_github("prabhakarlab/DUBStepR")
BCells_RNA <- readRDS("~/Desktop/Mice_BC/Subclustering_BCells/BCells_RNA.rds")
BCells_RNA <- readRDS("~/Desktop/Mice_BC/FinalFigurePanels/BCells_RNA.rds")
View(BCells_RNA)
shiny::runApp('JacksonLabs_Mice/Mice_Aging_RShiny')
setwd("~/Mammary_gland_aging/DendriticCells_Macrophages_Fig5_SupplementaryFig7")
